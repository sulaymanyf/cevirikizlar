package ${cfg.entityPackage};
import com.baomidou.mybatisplus.annotation.TableField;
import com.baomidou.mybatisplus.annotation.TableName;

#if(${cfg.entitySuperClass})
import ${cfg.entitySuperClass};
#end
#foreach($pkg in ${table.importPackages})
import ${pkg};
#end
#if(${entityLombokModel})
import lombok.*;
import lombok.experimental.Tolerate;
#end

/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${entityLombokModel})
@Data
@EqualsAndHashCode(callSuper = false)
@Builder
@ToString
#end
@TableName("${table.name}")
#if(${cfg.entitySuperClass})
public class ${cfg.entityName} extends ${cfg.entitySuperClassName} {
#elseif(${activeRecord})
public class ${cfg.entityName} extends Model<${cfg.entityName}> {
#else
public class ${cfg.entityName} implements Serializable{
#end

private static final long serialVersionUID=1L;

## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields} )
    #if(${field.name} != "id" && ${field.name} != "create_user" && ${field.name} != "create_user"
    && ${field.name} != "create_time" && ${field.name} != "update_user"  && ${field.name} != "update_time"
    && ${field.name} != "is_deleted" && ${field.name} != "status")

        #if(${field.keyFlag})
            #set($keyPropertyName=${field.propertyName})
        #end
        #if("$!field.comment" != "")
        /**
         * ${field.comment}
         */
        #end
        #if(${field.keyFlag})
        ## 主键
            #if(${field.keyIdentityFlag})
            @TableId(value = "${field.name}", type = IdType.AUTO)
            #elseif(${field.convert})
            @TableId("${field.name}")
            #end
        ## 普通字段
        #elseif(${field.fill})
        ## -----   存在字段填充设置   -----
            #if(${field.convert})
            @TableField(value = "${field.name}", fill = FieldFill.${field.fill})
            #else
            @TableField(fill = FieldFill.${field.fill})
            #end
        #else
        @TableField("${field.name}")
        #end
    ## 乐观锁注解
        #if(${versionFieldName}==${field.name})
        @Version
        #end
    ## 逻辑删除注解
        #if(${logicDeleteFieldName}==${field.name})
        @TableLogic
        #end
    private ${field.propertyType} ${field.propertyName};
    #end
#end
## ----------  END 字段循环遍历  ----------

#if(!${entityLombokModel})
    #foreach($field in ${table.fields})
        #if(${field.propertyType.equals("boolean")})
            #set($getprefix="is")
        #else
            #set($getprefix="get")
        #end

    public ${field.propertyType} ${getprefix}${field.capitalName}(){
        return ${field.propertyName};
        }

        #if(${entityBuilderModel})
        public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}){
        #else
        public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
        #end
        this.${field.propertyName} = ${field.propertyName};
        #if(${entityBuilderModel})
            return this;
        #end
        }
    #end
#end

#if(${entityColumnConstant})
    #foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} ="${field.name}";

    #end
#end

#if(${entityLombokModel})
@Tolerate public ${cfg.entityName}(){
    }
#end


#if(!${entityLombokModel})
@Override public String toString() {
    return "${entity}{" +
    #foreach($field in ${table.fields})
        #if($!{velocityCount}==1)
            "${field.propertyName}=" + ${field.propertyName} +
        #else
            ", ${field.propertyName}=" + ${field.propertyName} +
        #end
    #end
    "}";
    }
#end
    }
